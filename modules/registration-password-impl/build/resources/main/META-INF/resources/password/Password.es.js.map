{"version":3,"sources":["../../../../../../src/main/resources/META-INF/resources/password/Password.es.js"],"names":["RegisterPassword","name","onBlur","onChange","onFocus","placeholder","predefinedValue","readOnly","disabled","value","initialValue","otherProps","setValue","event","target","displayName"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2000-present Liferay, Inc. All rights reserved.\n *\n * This library is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Lesser General Public License as published by the Free\n * Software Foundation; either version 2.1 of the License, or (at your option)\n * any later version.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n * details.\n */\nimport {FieldBase} from 'dynamic-data-mapping-form-field-type/FieldBase/ReactFieldBase.es';\nimport {useSyncValue} from 'dynamic-data-mapping-form-field-type/hooks/useSyncValue.es';\nimport withConfirmationField from 'dynamic-data-mapping-form-field-type/util/withConfirmationField.es';\nimport React, { useState } from 'react';\n\nconst RegisterPassword = ({\n\tname,\n\tonBlur,\n\tonChange,\n\tonFocus,\n\tplaceholder,\n\tpredefinedValue,\n\treadOnly: disabled,\n\tvalue: initialValue,\n\t...otherProps\n}) => {\n\tconst [value, setValue] = useState(\n\t\tinitialValue ? initialValue : predefinedValue\n\t);\n\n\treturn (\n\t\t<FieldBase {...otherProps} name={name} readOnly={disabled}>\n\t\t\t<input\n\t\t\t\tclassName=\"ddm-field-text form-control\"\n\t\t\t\tdisabled={disabled}\n\t\t\t\tid={name}\n\t\t\t\tname={name}\n\t\t\t\tonBlur={onBlur}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonInput={(event) => {\n\t\t\t\t\tonChange(event);\n\t\t\t\t\tsetValue(event.target.value);\n\t\t\t\t}}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\ttype=\"password\"\n\t\t\t\tvalue={value}\n\t\t\t/>\n\t\t</FieldBase>\n\t);\n};\n\nRegisterPassword.displayName = 'Password for registration';\nexport default withConfirmationField(RegisterPassword);\n\n"]}